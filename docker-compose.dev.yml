name: tabas-dev
services:
  dev-db:
    container_name: dev-postgresDB
    image: postgres
    restart: always
    volumes:
      - ../back/data:/var/lib/postgresql/data
    networks:
      - dev-network
    env_file:
      - ../back/.env
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 5s
      timeout: 10s
      retries: 15
      start_period: 30s
  dev-adminer:
    container_name: dev-adminer
    image: adminer
    restart: always
    environment:
      - ADMINER_DESIGN=hydra
    ports:
      - 8081:8080
    networks:
      - dev-network
    depends_on:
      dev-db:
        condition: service_healthy
  dev-backend:
    container_name: dev-backend
    build:
      context: ../back
      dockerfile: Dockerfile.dev
    env_file:
      - ../back/.env
    ports:
      - 5000:5000
    networks:
      - dev-network
    command: [sh, -cx, 'npm run dev']
    volumes:
      - ../back/src/:/app/src/
    depends_on:
      'dev-db':
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '--request',
          'POST',
          '--header',
          "'content-type: application/json'",
          '--url',
          'http://localhost:5000/',
          '--data',
          '{"query":"query { __typename }"}',
        ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s
  dev-images:
    container_name: dev-images-service
    env_file:
      - ../images-service/.env
    build: ../images-service
    volumes:
      - ../images-service/src:/app/src
      - ../images-service/uploads:/app/uploads
    ports:
      - 8000:8000
    networks:
      - dev-network
    healthcheck:
      test: "curl --fail --request GET --url 'http://localhost:8000' || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10

  dev-frontend:
    container_name: dev-frontend
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - 8080:8080
    networks:
      - dev-network
    volumes:
      - ./src/:/app/src/
    depends_on:
      'dev-backend':
        condition: service_healthy
      'dev-images':
        condition: service_healthy
networks:
  dev-network:
    name: dev-network
